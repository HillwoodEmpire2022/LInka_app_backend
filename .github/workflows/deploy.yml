name: Deploy Linka Backend to DigitalOcean

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Validate PHP version
        run: php -v

      - name: Validate composer.json and composer.lock
        run: 
          composer update
          composer validate 

      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-


      - name: Install dependencies
        run: 
          composer install --prefer-dist --no-progress

      - name: Copy files to DigitalOcean server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          USER: linka
          HOST: 64.225.14.123
          APP_DIR: /var/www/LInka_app_backend

        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          rsync -avz --delete --exclude 'vendor' --exclude '.env' --exclude '.git' . linka@64.225.14.123:/var/www/LInka_app_backend

      - name: Check file permissions on id_rsa
        run: |
            ls -l ~/.ssh/id_rsa
    
      - name: Set permissions on id_rsa (if needed)
        run: |
            chmod 600 ~/.ssh/id_rsa

      - name: Install dependencies on server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          USER: linka
          HOST: 64.225.14.123
          APP_DIR: /var/www/LInka_app_backend
      
        run: |
          ssh linka@64.225.14.123 << 'EOF'
            cd /var/www/LInka_app_backend
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl reload php8.3-fpm
            sudo systemctl reload nginx
          EOF
